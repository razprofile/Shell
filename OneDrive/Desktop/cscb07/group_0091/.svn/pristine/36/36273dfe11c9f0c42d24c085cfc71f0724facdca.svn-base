// **********************************************************
// Assignment2:
// Student1:
// UTORID user_name: benhaimr
// UT Student #: 1006139830
// Author: Raz Ben Haim
//
// Student2:
// UTORID user_name: sharm697
// UT Student #: 1002352465
// Author: Sankalp Sharma
//
// Student3:
// UTORID user_name: voitovyc
// UT Student #: 1005735563
// Author: Oleksandr Voitovych
//
// Student4:
// UTORID user_name: meharch6
// UT Student #: 1003963570
// Author: Kevin Meharchand
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************

package jShell.commands;

import jShell.Errors.ArgsNumberException;
import jShell.Errors.DirNotFoundException;
import jShell.Errors.InvalidPathException;
import jShell.fileSystem.Directory;
import jShell.fileSystem.Path;
import jShell.interfaces.IShell;

/**
 * The Cd command is used for changing directories. It will throw an error if directory doesn't
 * exist or path is invalid.
 * 
 * @author Sankalp Sharma
 * 
 */
public class Cd extends Command {
  
  public Cd() {
    super();
  }


  /**
   * The run method for CD uses the parseDir method to determine the right course of action when
   * changing directories such as: going up one level, staying at current level, and changing
   * directories with absolute and relative paths.
   * 
   * @throws ArgsNumberException
   * @throws DirNotFoundException
   * @throws InvalidPathException
   * 
   */
  @Override
  public String run(String[] args)
      throws DirNotFoundException, ArgsNumberException, InvalidPathException {
    if(args.length != 2) {
      throw new ArgsNumberException();
    }
    // assuming all the arguments are correct, go into ParseDir
    Directory dirDestination;
    try {
      dirDestination = (Directory) IShell.getShell().getFileSystem()
          .getNodeAtPath(new Path(args[1]));
    } catch (ClassCastException e) {
      throw new DirNotFoundException(args[1]);
    }
    /*
     * special case if when the the destination directory path is null, then we just want to manually
     * set it to root path
     */
    if (dirDestination.getPath() == null) {
      IShell.getShell().getUserData().setCurPath(new Path("/"));

      /*
       * else we actually the set the current path to the destination directory
       */
    } else {
      IShell.getShell().getUserData().setCurPath(dirDestination.getPath());
    }
    return "";
  }

  @Override
  public String toString() {

    return "cd";

  }

  /*
   * public static void main(String[] args) { Shell IShell.getShell() = new Shell();
   * 
   * //print out pwd after doing cd. Test cases with mkdir and cd don't print anything unless there is
   * an error
   * 
   * String test1 = "mkdir a"; IShell.getShell().onInput(test1);
   * 
   * String test2 = "cd a"; IShell.getShell().onInput(test2);
   * 
   * //test 3 will print out /a String test3 = "pwd"; IShell.getShell().onInput(test3);
   * 
   * String test4 = "cd .."; IShell.getShell().onInput(test4);
   * 
   * //test 5 will print out / String test5 = "pwd"; IShell.getShell().onInput(test5);
   * 
   * String test6 = "cd /a"; IShell.getShell().onInput(test6);
   * 
   * //test 7 will print out /a String test7 = "pwd"; IShell.getShell().onInput(test7);
   * 
   * String test8 = "mkdir b"; IShell.getShell().onInput(test8);
   * 
   * String test9 = "cd b"; IShell.getShell().onInput(test9);
   * 
   * //test 10 will print out /a/b/ String test10 = "pwd"; IShell.getShell().onInput(test10);
   * 
   * String test11 = "mkdir c"; IShell.getShell().onInput(test11);
   * 
   * String test12 = "cd c"; IShell.getShell().onInput(test12);
   * 
   * //test 13 will print out /a/b/c String test13 = "pwd"; IShell.getShell().onInput(test13);
   * 
   * String test14 = "cd ../../../a/b/"; IShell.getShell().onInput(test14);
   * 
   * //test 15 will print out /a/b String test15 = "pwd"; IShell.getShell().onInput(test15);
   * 
   * //test 16 will print Error: Directory not found because b is not at root String test16 =
   * "cd .././../b"; IShell.getShell().onInput(test16);
   * 
   * //test 17 will print out Error: Directory not found because there is no //directory called d
   * String test17 = "cd d"; IShell.getShell().onInput(test17);
   * 
   * //test 18 will print out Error: Incorrect number of arguments. String test18 = "cd a 3";
   * IShell.getShell().onInput(test18);
   * 
   * }
   */
}
