// **********************************************************
// Assignment2:
// Student1:
// UTORID user_name: benhaimr
// UT Student #: 1006139830
// Author: Raz Ben Haim
//
// Student2:
// UTORID user_name: sharm697
// UT Student #: 1002352465
// Author: Sankalp Sharma
//
// Student3:
// UTORID user_name: voitovyc
// UT Student #: 1005735563
// Author: Oleksandr Voitovych
//
// Student4:
// UTORID user_name: meharch6
// UT Student #: 1003963570
// Author: Kevin Meharchand
//
//
// Honor Code: I pledge that this program represents my own
// program code and that I have coded on my own. I received
// help from no one in designing and debugging my program.
// I have also read the plagiarism section in the course info
// sheet of CSC B07 and understand the consequences.
// *********************************************************

package jShell.commands;

import jShell.interfaces.*;


import java.util.HashMap;

/**
 * A class to implement the Popd command (Remove the top entry from the directory stack, and cd into
 * it).
 * 
 * @author Raz
 */
public class Popd extends Command {

  public Popd() {
    super();
  }

  @Override
  public String run(String[] args) {

    // If stack is empty, print a corresponding error message
    if (shell.getUserData().getPathStack().empty()) {
      IError e = shell.getError();
      shell.outputToShell(e.errorMessage("EMPTYSTACK"));
      return "\n";
    }
    // Else, pop the last item from the stack and cd into it
    shell.getUserData()
        .setCurPath(shell.getUserData().getPathStack().pop());;
        return "";
  }

  @Override
  public HashMap<String, String> isValid(String[] args) {

    // HashMap to map every argument by an error it caused
    HashMap<String, String> errors = new HashMap<String, String>();

    // Checking if correct number of arguments is passed
    if (args.length != 1) {
      errors.put("all", "WRONGARGS");
      return errors;
    }

    // Checking that stack is not empty
    if (shell.getUserData().getPathStack().empty()) {
      errors.put("all", "EMPTYSTACK");
    }

    return errors;
  }

  @Override
  public String toString() {

    return "popd";

  }

}
