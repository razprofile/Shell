package jShell.commands;

import java.util.HashMap;
import jShell.Directory;
import jShell.Path;
import jShell.Shell;

public class Rm extends Command {

  public void run(String[] args) {
    Path path = new Path(args[1]);
    Directory parent = (Directory) Shell.getShell().getFileSystem()
        .getNodeAtPath(path.getParentPath());
    parent.removeChild(path.getSequence()[path.getSequence().length-1]);
  }

  @Override
  public HashMap<String, String> isValid(String[] args) {
    // TODO Auto-generated method stub
    // HashMap to map every argument by an error it caused
    HashMap<String, String> errors = new HashMap<String, String>();

    // Checking that correct number of arguments is passed
    if (args.length != 2) {
      errors.put("all", "WRONGARGS");
    }

    // check if user is trying delete root or trying to delete a directory
    // that doesn't exist
    Path path = new Path(args[1]);
    if (!path.isValidPath() || !path.isPathToDirectory()) {
      errors.put(args[1], "DIRNOTFOUND");
    }
    // trying to delete root
    if (args[1].equals("/")) {
      errors.put(args[1], "CANNOTDELETEROOT");
    }

    return errors;
  }


  @Override
  public String toString() {
    // TODO Auto-generated method stub
    return null;
  }

}
