package jShell.commands;

import java.util.Arrays;
import java.util.HashMap;
import jShell.Directory;
import jShell.FileSystemNode;
import jShell.Shell;
import jShell.Path;
import jShell.Error;

public class Ls extends Command {

  public void run(String[] args) {

    // Getting rid of first argument, which is Ls
    args = Arrays.copyOfRange(args, 1, args.length);

    if (args.length == 0) {

      Directory currDir = Shell.getShell().getUserData().getCurDir();

      // No path given, print contents of current directory
      for (FileSystemNode child : currDir.getChildren()) {
        Shell.getShell().outputToShellln(child.getName());
      }

    }

    for (String argument : args) {

      Path p = new Path(argument);

      // Checking if specified path is a directory or a file
      if (p.isPathToDirectory()) {
        /*
         * Path leads to directory
         */

        // Getting reference to specified directory
        Directory dir = (Directory) Shell.getShell().getFileSystem().getNodeAtPath(p);

        // Printing name of directory
        Shell.getShell().outputToShellln(dir.getName() + ":");

        // Printing names of contents
        for (FileSystemNode child : dir.getChildren()) {
          Shell.getShell().outputToShellln(child.getName());
        }

        Shell.getShell().outputToShellln("");
      } else {
        /*
         * Path leads to file
         */
        Shell.getShell().outputToShellln(p.toString());
      }
    }

  }

  @Override
  public HashMap<String, String> isValid(String[] args) {
    
    // HashMap to map every argument by an error it caused
    HashMap<String, String> errors = new HashMap<String, String>();

    // Iterating over every argument
    for (int i = 1; i < args.length; i++) {

      Path p = new Path(args[i]);

      // Checking if given location corresponds to a valid location at current file tree
      if (!p.isValidPath()) {
        errors.put(args[i], "PATHNOTFOUND");
      }
    }

    return errors;

  }

  @Override
  public String toString() {

    return "ls";

  }

}
